Aufgabe 1:
Versetz dich in die Rolle eines Softwareentwicklers. Dein Ziel ist es präzisen Code zu schreiben der gut Verständlich ist. Zudem soll er möglichst effizent sein und alle Anforderungen der Aufgabestellung erfüllen. 
Bitte schreibe den Code in Python und verwende die Python Konventionen von PEP8. Strukturiere die Dateien sinn voll und gebe den Dateien sprechende Namen. Halte dich strikt an diese Anweisungen.
Die Aufgabe lautet wie folgt:

Erstelle eine GUI in Python. Das Fenster soll im Hintergrund ein Warbenmuster haben und eine Zahl in der Mitte anzeigen. Durch zwei Knöpfe soll die Zahl erhöht oder verringert werden.

Aufgabe 2:
Versetz dich in die Rolle eines Softwareentwicklers. Dein Ziel ist es präzisen Code zu schreiben der gut Verständlich ist. Zudem soll er möglichst effizent sein und alle Anforderungen der Aufgabestellung erfüllen. 
Bitte schreibe den Code in Python und verwende die Python Best Practices. Strukturiere die Dateien, wenn es mehrere geben sollte sinn voll und gebe den Dateien sprechende Namen. Halte dich strikt an diese Anweisungen.
Die Aufgabe lautet wie folgt:

Implementieren Sie eine einfache Modellierung eines Verkehrsnetzes mit den Klassen Station, Connection und Network.
- Eine Station hat einen Namen
- Eine Connection verbindet zwei Stationen und hat eine Dauer in Minuten
- Das Netzwerk speichert alle Stationen und Verbindungen und soll eine Methode shortest_path(start, end) bereitstellen, die die kürzeste Reisedauer zwischen zwei Stationen mit dem Dijkstra-Algorithmus berechnet.

Aufgabe 3:
Versetz dich in die Rolle eines Softwareentwicklers. Dein Ziel ist es präzisen Code zu schreiben der gut Verständlich ist. Zudem soll er möglichst effizent sein und alle Anforderungen der Aufgabestellung erfüllen. 
Bitte schreibe den Code in Python und verwende die Python Konventionen von PEP8. Strukturiere die Dateien sinn voll und gebe den Dateien sprechende Namen. Halte dich strikt an diese Anweisungen.
Die Aufgabe lautet wie folgt:

Schreiben Sie eine Funktion evaluate(expression: str), die einfache mathematische Ausdrücke mit +, -, *, / und Klammern korrekt auswertet. 

Beispiel:
evaluate("3 + (2 * (1 + 1))") #-> 7
Aufgabe 4:
Versetz dich in die Rolle eines Softwareentwicklers. Dein Ziel ist es präzisen Code zu schreiben der gut Verständlich ist. Zudem soll er möglichst effizent sein und alle Anforderungen der Aufgabestellung erfüllen. 
Bitte schreibe den Code in Python und verwende die Python Konventionen von PEP8. Strukturiere die Dateien sinn voll und gebe den Dateien sprechende Namen. Halte dich strikt an diese Anweisungen.
Die Aufgabe lautet wie folgt:

Du hast eine oder mehrere Logdateien von einem Webserver erhalten. Diese Dateien protokollieren jeden Zugriff auf den Server.
Die Logdateien sind im "Common Log Format" CLF. Das Programm soll alle gültigen Logzeilen zählen und zurückgeben wieviele Anfragen es gab.
Zudem soll gezählt werden wie oft jeder HTTP-Statuscode vorkam. Desweiteren sollen die N am häufigsten angefragten URLs aufgelistet werden sowie die n häufigsten IP-Addressen, von denen die meisten Anfragen kamen.
Dazu soll noch berechnet werden wieviele Bytes an Daten erfolgreich übertragen wurden.
Aufgabe 5:
Versetz dich in die Rolle eines Softwareentwicklers. Dein Ziel ist es präzisen Code zu schreiben der gut Verständlich ist. Zudem soll er möglichst effizent sein und alle Anforderungen der Aufgabestellung erfüllen. 
Bitte schreibe den Code in Python und verwende die Python Konventionen von PEP8. Strukturiere die Dateien sinn voll und gebe den Dateien sprechende Namen. Halte dich strikt an diese Anweisungen.
Die Aufgabe lautet wie folgt:

Schreiben Sie eine Funktion analyze_csv(filename: str), die eine CSV-Datei mit folgendem Format einliest:

- Die Funktion soll fehlerhafte Daten (z. B. leere Felder, ungültige Zahlen) erkennen und ignorieren, aber protokollieren.
- Geben Sie am Ende das Durchschnittsalter und den Durchschnitt der Punkte über alle gültigen Zeilen aus.

CSV:
Name, Alter, Punkte
Alice, 25, 88
Bob, , 74
Clara, 31, not available

